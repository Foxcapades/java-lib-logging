apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'signing'
apply from: 'config.gradle'

group "${config.organization.slug}.${config.project.group}"
version config.project.version

sourceCompatibility = config.project.jvm
targetCompatibility = config.project.jvm

/*
 * Tasks
 */

wrapper {
  gradleVersion = '4.8'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}
/*
 * JaCoCo Configuration
 */
jacoco {
  toolVersion = "0.8.1"
  reportsDir = file("${buildDir}/reports/jacoco")
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled false
  }
}

ext.moduleName = "${config.organization.slug}.${config.project.group}.${rootProject.name}"

signing {
  useGpgCmd()
  sign configurations.archives
}

repositories {
  mavenCentral()
}

dependencies {
  compileOnly(
    [ group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'  ],
    [ group: 'org.slf4j',                name: 'slf4j-api', version: '1.7.25' ]
  )
}

compileJava {
  inputs.property("moduleName", moduleName)
  doFirst {
    options.compilerArgs = [
      '--module-path', classpath.asPath,
    ]
    classpath = files()
  }
}

javadoc {
  options.addStringOption('-module-path',  classpath.asPath)
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

uploadArchives {

  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository( url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/' ) {
        authentication( userName: OSSRH_USERNAME, password: OSSRH_PASSWORD )
      }

//      repository( url: 'https://oss.sonatype.org/content/repositories/snapshots/' ) {
//        authentication( userName: config.credentials.username, password: config.credentials.password )
//      }

      pom.project {
        name "${config.organization.slug}.${config.project.group}:${config.project.name}"
        packaging 'jar'
        description config.project.description
        url config.project.site

        inceptionYear '2016'

        organization {
          name config.organization.title
          url config.organization.site
        }

        issueManagement {
          system 'Issue Tracker'
          url config.project.tracker
        }

        ciManagement {
          system 'Travis CI'
          url "https://travis-ci.org/${config.organization.key}"
        }

        scm {
          connection "scm:git:${config.project.vcs}"
          developerConnection "scm:git:${config.project.vcs}"
          tag 'master'
          url config.project.site
        }

        licenses {
          license {
            name config.license.name
            url config.license.url
            distribution 'repo'
          }
        }

        developers {
          developer {
            id config.developer.user
            name config.developer.name
            email config.developer.email
          }
        }
      }
    }
  }
}
